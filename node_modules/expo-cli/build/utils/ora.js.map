{"version":3,"sources":["../../src/utils/ora.ts"],"names":["ora","options","inputOptions","text","disabled","program","nonInteractive","Log","isDebug","isEnabled","stream","process","stdout","stderr","setSpinner","logNewSection","title","spinner","chalk","bold","start"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,GAAT,CAAaC,OAAb,EAA8D;AACnE,QAAMC,YAAY,GAAG,OAAOD,OAAP,KAAmB,QAAnB,GAA8B;AAAEE,IAAAA,IAAI,EAAEF;AAAR,GAA9B,GAAkDA,OAAO,IAAI,EAAlF;;AACA,QAAMG,QAAQ,GAAGC,qBAAQC,cAAR,IAA0BC,eAAIC,OAA/C;;AACA,QAAMR,GAAG,GAAG,oBAAQ;AAClB;AACAS,IAAAA,SAAS,EAAE,CAACL,QAFM;AAGlB;AACAM,IAAAA,MAAM,EAAEN,QAAQ,GAAGO,OAAO,CAACC,MAAX,GAAoBD,OAAO,CAACE,MAJ1B;AAKlB,OAAGX;AALe,GAAR,CAAZ,CAHmE,CAWnE;;AACAK,iBAAIO,UAAJ,CAAed,GAAf;;AAEA,SAAOA,GAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASe,aAAT,CAAuBC,KAAvB,EAAsC;AAC3C,QAAMC,OAAO,GAAGjB,GAAG,CAACkB,iBAAMC,IAAN,CAAWH,KAAX,CAAD,CAAnB,CAD2C,CAE3C;;AACAC,EAAAA,OAAO,CAACG,KAAR;AACA,SAAOH,OAAP;AACD","sourcesContent":["import chalk from 'chalk';\nimport program from 'commander';\nimport oraReal from 'ora';\n\nimport Log from '../log';\n\n/**\n * A custom ora spinner that sends the stream to stdout in CI, non-TTY, or expo's non-interactive flag instead of stderr (the default).\n *\n * @param options\n * @returns\n */\nexport function ora(options?: oraReal.Options | string): oraReal.Ora {\n  const inputOptions = typeof options === 'string' ? { text: options } : options || {};\n  const disabled = program.nonInteractive || Log.isDebug;\n  const ora = oraReal({\n    // Ensure our non-interactive mode emulates CI mode.\n    isEnabled: !disabled,\n    // In non-interactive mode, send the stream to stdout so it prevents looking like an error.\n    stream: disabled ? process.stdout : process.stderr,\n    ...inputOptions,\n  });\n\n  // Always make the central logging module aware of the current spinner\n  Log.setSpinner(ora);\n\n  return ora;\n}\n\n/**\n * Create a unified section spinner.\n *\n * @param title\n * @returns\n */\nexport function logNewSection(title: string) {\n  const spinner = ora(chalk.bold(title));\n  // Prevent the spinner from clashing with debug logs\n  spinner.start();\n  return spinner;\n}\n"],"file":"ora.js"}