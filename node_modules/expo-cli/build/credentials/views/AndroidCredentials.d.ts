import { AndroidCredentials as Credentials } from '@expo/xdl';
import { Context, IView } from '../context';
import { AndroidCredentials, FcmCredentials } from '../credentials';
export declare class ExperienceView implements IView {
    experience: string;
    experienceName?: string;
    keystore: Credentials.Keystore | null;
    pushCredentials: FcmCredentials | null;
    shouldRefetch: boolean;
    constructor(experience: string, credentials: AndroidCredentials | null);
    open(ctx: Context): Promise<IView | null>;
    handleAction(context: Context, selected: string): IView | null;
}
export declare class UpdateKeystore implements IView {
    experience: string;
    constructor(experience: string);
    open(ctx: Context): Promise<IView | null>;
    provideOrGenerate(ctx: Context): Promise<Credentials.Keystore>;
}
export declare class UpdateFcmKey implements IView {
    experience: string;
    constructor(experience: string);
    open(ctx: Context): Promise<IView | null>;
}
export declare class DownloadKeystore implements IView {
    experience: string;
    credentials: Credentials.Keystore | null;
    constructor(experience: string, credentials?: Credentials.Keystore | null);
    open(ctx: Context): Promise<IView | null>;
    fetch(ctx: Context): Promise<void>;
    save(ctx: Context, keystorePath: string, shouldLog?: boolean): Promise<void>;
}
