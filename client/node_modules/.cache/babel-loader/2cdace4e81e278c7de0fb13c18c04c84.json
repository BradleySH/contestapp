{"ast":null,"code":"var _jsxFileName = \"/Users/markgw/Desktop/dev/contestapp/client/pinion-games/src/pages/Events.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../context/UserProvider\";\nimport SubHeader from \"../components/SubHeader\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EventCard from '../components/EventCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nconst Events = () => {\n  _s();\n\n  const {\n    user: {\n      client,\n      role\n    }\n  } = useContext(UserContext);\n  const [events, setEvents] = useState([]);\n\n  function showEvents(events) {\n    const onlyEvents = events.filter(event => event.type === \"event\");\n    setEvents(onlyEvents);\n  }\n\n  function getEvents() {\n    if (role === \"admin\") {\n      console.log('admin');\n      userAxios.get(\"/event\").then(res => showEvents(res.data)).catch(err => console.log(err));\n    } else {\n      console.log('general');\n      userAxios.get(`/event/client/${client}`).then(res => showEvents(res.data)).catch(err => console.log(err));\n    }\n  }\n\n  useEffect(() => {\n    getEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SubHeader, {\n      header1: \"SCHEDULE OF\",\n      header2: \"EVENTS\",\n      imgUrl: \"/images/events.png\",\n      color: \"#1c3557\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/createevent\",\n        state: {\n          type: \"Event\",\n          client: client\n        }\n      },\n      children: \"Create New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \"Events\", /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n        name: event.title,\n        _id: event._id,\n        date: event.eventDate\n      }, event._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Events, \"2RWFYMUMXWy03JB3r4zym6Gc4ec=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/markgw/Desktop/dev/contestapp/client/pinion-games/src/pages/Events.js"],"names":["useContext","useEffect","useState","UserContext","SubHeader","Link","axios","EventCard","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","Events","user","client","role","events","setEvents","showEvents","onlyEvents","filter","event","type","getEvents","console","log","get","then","res","data","catch","err","pathname","state","map","title","_id","eventDate"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport { UserContext } from \"../context/UserProvider\"\nimport SubHeader from \"../components/SubHeader\"\nimport {Link} from \"react-router-dom\"\nimport axios from \"axios\"\nimport EventCard from '../components/EventCard'\n\nconst userAxios = axios.create()\nuserAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\")\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\nconst Events = () => {\n\n    const {user: {client, role}} = useContext(UserContext)\n\n    const [events, setEvents] = useState([])\n\n    function showEvents(events){\n        const onlyEvents = events.filter(event => event.type === \"event\")\n        setEvents(onlyEvents)\n    }\n\n    function getEvents(){\n\n        if(role === \"admin\"){\n            console.log('admin')\n            userAxios.get(\"/event\")\n                .then(res => showEvents(res.data))\n                .catch(err => console.log(err))\n        } else {\n            console.log('general')\n            userAxios.get(`/event/client/${client}`)\n                .then(res => showEvents(res.data))\n                .catch(err => console.log(err))\n        }\n\n    }\n\n    useEffect(() => {\n        getEvents()\n    }, [])\n\n    return(\n        <>\n            <SubHeader header1={\"SCHEDULE OF\"} header2={\"EVENTS\"} imgUrl={\"/images/events.png\"} color={\"#1c3557\"} />\n            <Link to={{pathname: \"/createevent\", state: {type: \"Event\", client: client}}}>Create New Event</Link>\n            Events\n            <fieldset>\n                {events.map(event => <EventCard name={event.title} _id={event._id} key={event._id} date={event.eventDate} />)}\n            </fieldset>\n        </>\n    )\n}\n\nexport default Events"]},"metadata":{},"sourceType":"module"}