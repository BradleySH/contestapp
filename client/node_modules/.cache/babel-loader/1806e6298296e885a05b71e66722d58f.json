{"ast":null,"code":"var _jsxFileName = \"/Users/markgw/Desktop/dev/contestapp/client/pinion-games/src/pages/AddTeamMember.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation, Redirect } from \"react-router\";\nimport axios from 'axios';\nimport Search from \"../components/Search\";\nimport MemberTag from \"../components/MemberTag\";\nimport SubHeader from \"../components/SubHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default function AddTeamMember() {\n  _s();\n\n  const [didSubmit, setDidSubmit] = useState(false);\n  const location = useLocation();\n  const {\n    team,\n    client\n  } = location.state;\n  const [users, setUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchedMembers, setSearchedMembers] = useState(false);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n\n  function getClientUsers() {\n    userAxios(`/api/user/client/${client._id}`).then(res => setUsers(res.data)).catch(err => console.log(err));\n  }\n\n  function showCurrentMembers() {\n    setSearchedMembers(true);\n    const currentUsers = users.filter(user => user.team === team._id);\n    console.log(currentUsers);\n    setSelectedMembers(currentUsers);\n  }\n\n  function showClientUsers() {\n    if (searchedMembers) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(MemberTag, {\n          _id: user._id,\n          color: selectedMembers.includes(user._id) ? 'green' : 'white',\n          name: `${user.firstName} ${user.lastName}`,\n          avatar: user.avatar,\n          set: () => selectMember(user._id)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n  function selectMember(_id) {\n    if (selectedMembers.includes(_id)) {\n      const copy = selectedMembers.slice();\n      const updatedMembers = copy.filter(id => id !== _id);\n      console.log(updatedMembers);\n      setSelectedMembers(updatedMembers);\n    } else {\n      setSelectedMembers(prevSelectedMembers => [...prevSelectedMembers, _id]);\n    }\n  }\n\n  function addTeamMembers() {\n    const membersToUpdate = {\n      members: selectedMembers\n    };\n    setDidSubmit(true);\n    userAxios.put(`/api/user/team/${team._id}`, membersToUpdate).then(res => console.log(res)).catch(err => console.log(err));\n  }\n\n  function handleSearch() {\n    const filteredUsers = users.filter(user => {\n      if (!user.firstName) {\n        return false;\n      }\n\n      const userName = `${user.firstName.toLowerCase()} ${user.lastName.toLowerCase()}`;\n      return userName.includes(searchQuery.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(MemberTag, {\n        _id: user._id,\n        color: selectedMembers.includes(user._id) ? 'green' : 'white',\n        name: `${user.firstName}  ${user.lastName}`,\n        avatar: user.avatar,\n        set: () => selectMember(user._id)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n  useEffect(() => {\n    getClientUsers(); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    showCurrentMembers(); // eslint-disable-next-line\n  }, [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SubHeader, {\n      renderArrow: true,\n      header1: team.name,\n      header2: team.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), didSubmit ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/team\",\n        state: {\n          team: team,\n          client: client\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(Search, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTeamMembers(),\n      children: \"Submit Team Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), searchQuery.length > 0 ? handleSearch() : showClientUsers()]\n  }, void 0, true);\n}\n\n_s(AddTeamMember, \"iOKdyCwxjZilv2/j6dqLzN38mp4=\", false, function () {\n  return [useLocation];\n});\n\n_c = AddTeamMember;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTeamMember\");","map":{"version":3,"sources":["/Users/markgw/Desktop/dev/contestapp/client/pinion-games/src/pages/AddTeamMember.js"],"names":["useState","useEffect","useLocation","Redirect","axios","Search","MemberTag","SubHeader","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","AddTeamMember","didSubmit","setDidSubmit","location","team","client","state","users","setUsers","searchQuery","setSearchQuery","searchedMembers","setSearchedMembers","selectedMembers","setSelectedMembers","getClientUsers","_id","then","res","data","catch","err","console","log","showCurrentMembers","currentUsers","filter","user","showClientUsers","map","includes","firstName","lastName","avatar","selectMember","copy","slice","updatedMembers","id","prevSelectedMembers","addTeamMembers","membersToUpdate","members","put","handleSearch","filteredUsers","userName","toLowerCase","name","pathname","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLocation, Redirect } from \"react-router\";\nimport axios from 'axios'\n\nimport Search from \"../components/Search\";\nimport MemberTag from \"../components/MemberTag\";\nimport SubHeader from \"../components/SubHeader\";\n\nconst userAxios = axios.create()\nuserAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\")\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\nexport default function AddTeamMember(){\n\n    const [didSubmit, setDidSubmit] = useState(false)\n\n    const location = useLocation()\n    const { team, client} = location.state\n    \n    const [users, setUsers] = useState([])\n    const [searchQuery, setSearchQuery] = useState('')\n    const [searchedMembers, setSearchedMembers] = useState(false)\n    const [selectedMembers, setSelectedMembers] = useState([])\n\n    function getClientUsers(){\n        userAxios(`/api/user/client/${client._id}`)\n            .then(res => setUsers(res.data))\n            .catch(err => console.log(err))\n    }\n\n    function showCurrentMembers(){\n        setSearchedMembers(true)\n        const currentUsers = users.filter(user => user.team === team._id)\n        console.log(currentUsers)\n        setSelectedMembers(currentUsers)\n    }\n\n    function showClientUsers(){\n        if(searchedMembers){\n            return (\n                <div>\n                    {users.map(user => <MemberTag key={user._id} _id={user._id} color={selectedMembers.includes(user._id) ? 'green' : 'white'} name={`${user.firstName} ${user.lastName}`} avatar={user.avatar} set={() => selectMember(user._id)} />)}\n                </div>\n            )\n        } else {\n            return null\n        }\n\n    }\n\n    function selectMember(_id){\n        if(selectedMembers.includes(_id)){\n            const copy = selectedMembers.slice()\n            const updatedMembers = copy.filter(id => id !== _id)\n            console.log(updatedMembers)\n            setSelectedMembers(updatedMembers)\n        } else {\n            setSelectedMembers(prevSelectedMembers => [...prevSelectedMembers, _id])\n        }\n    }\n\n    function addTeamMembers(){\n        const membersToUpdate = {\n            members: selectedMembers\n        }\n\n        setDidSubmit(true)\n\n        userAxios.put(`/api/user/team/${team._id}`, membersToUpdate)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n\n    function handleSearch(){\n        const filteredUsers = users.filter(user => {\n            if(!user.firstName){\n                return false\n            }\n            const userName = `${user.firstName.toLowerCase()} ${user.lastName.toLowerCase()}`\n            return userName.includes(searchQuery.toLowerCase())\n        })\n\n        return (\n            <div>\n                {filteredUsers.map(user => <MemberTag  key={user._id} _id={user._id} color={selectedMembers.includes(user._id) ? 'green' : 'white'} name={`${user.firstName}  ${user.lastName}`} avatar={user.avatar} set={() => selectMember(user._id)} />)}\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        getClientUsers()\n        // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        showCurrentMembers()\n        // eslint-disable-next-line\n    }, [users])\n\n    return (\n        <>\n        <SubHeader renderArrow={true} header1={team.name} header2={team.name} />\n        { didSubmit ? <Redirect to={{\n                pathname: \"/team\",\n                state: {\n                    team: team,\n                    client: client\n                }\n            }} />\n            :\n            null\n        }\n        <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n        <button onClick={() => addTeamMembers()} >Submit Team Members</button>\n        {searchQuery.length > 0 ? handleSearch() : showClientUsers()}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}