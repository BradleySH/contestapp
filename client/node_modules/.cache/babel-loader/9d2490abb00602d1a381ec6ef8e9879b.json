{"ast":null,"code":"var _jsxFileName = \"/Users/markgw/Desktop/dev/contestapp/client/pinion-games/src/pages/AddTeamMember.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation, Redirect } from \"react-router\";\nimport axios from 'axios';\nimport Search from \"../components/Search\";\nimport MemberTag from \"../components/MemberTag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default function AddTeamMember() {\n  _s();\n\n  const location = useLocation();\n  const {\n    team,\n    client\n  } = location.state;\n  console.log(`Team`, team);\n  console.log(`Client`, client);\n  const [users, setUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedMembers, setSelectedMembers] = useState([]);\n\n  function getClientUsers() {\n    userAxios(`/api/user/client/${client._id}`).then(res => setUsers(res.data)).catch(err => console.log(err));\n  }\n\n  function showClientUsers() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(MemberTag, {\n        colors: true,\n        name: `${user.firstName} ${user.lastName}`,\n        avatar: user.avatar,\n        set: () => selectMember(user._id)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  function selectMember(_id) {\n    if (selectedMembers.includes(_id)) {\n      const copy = selectedMembers.slice();\n      const updatedMembers = copy.filter(user => user._id === _id);\n      setSelectedMembers(updatedMembers);\n    } else {\n      setSelectedMembers(prevSelectedMembers => [...prevSelectedMembers, _id]);\n    }\n  }\n\n  function handleSearch() {\n    const filteredUsers = users.filter(user => {\n      if (!user.firstName) {\n        return;\n      }\n\n      const userName = `${user.firstName.toLowerCase()} ${user.lastName.toLowerCase()}`;\n      return userName.includes(searchQuery.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(MemberTag, {\n        name: `${user.firstName} ${user.lastName}`,\n        avatar: user.avatar,\n        set: () => selectMember(user._id)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n  useEffect(() => {\n    getClientUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), searchQuery.length > 0 ? handleSearch() : showClientUsers()]\n  }, void 0, true);\n}\n\n_s(AddTeamMember, \"Z8KFF1CyiKRdHjmeKr+BPqEcnZU=\", false, function () {\n  return [useLocation];\n});\n\n_c = AddTeamMember;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTeamMember\");","map":{"version":3,"sources":["/Users/markgw/Desktop/dev/contestapp/client/pinion-games/src/pages/AddTeamMember.js"],"names":["useState","useEffect","useLocation","Redirect","axios","Search","MemberTag","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","AddTeamMember","location","team","client","state","console","log","users","setUsers","searchQuery","setSearchQuery","selectedMembers","setSelectedMembers","getClientUsers","_id","then","res","data","catch","err","showClientUsers","map","user","firstName","lastName","avatar","selectMember","includes","copy","slice","updatedMembers","filter","prevSelectedMembers","handleSearch","filteredUsers","userName","toLowerCase","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLocation, Redirect } from \"react-router\";\nimport axios from 'axios'\n\nimport Search from \"../components/Search\";\nimport MemberTag from \"../components/MemberTag\";\n\nconst userAxios = axios.create()\nuserAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\")\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\nexport default function AddTeamMember(){\n\n    const location = useLocation()\n    const { team, client} = location.state\n    console.log(`Team`, team)\n    console.log(`Client`, client)\n    \n    const [users, setUsers] = useState([])\n    const [searchQuery, setSearchQuery] = useState('')\n    const [selectedMembers, setSelectedMembers] = useState([])\n\n    function getClientUsers(){\n        userAxios(`/api/user/client/${client._id}`)\n            .then(res => setUsers(res.data))\n            .catch(err => console.log(err))\n    }\n\n    function showClientUsers(){\n        return (\n            <div>\n                {users.map(user => <MemberTag key={user._id} colors name={`${user.firstName} ${user.lastName}`} avatar={user.avatar} set={() => selectMember(user._id)} />)}\n            </div>\n        )\n    }\n\n    function selectMember(_id){\n        if(selectedMembers.includes(_id)){\n            const copy = selectedMembers.slice()\n            const updatedMembers = copy.filter(user => user._id === _id)\n            setSelectedMembers(updatedMembers)\n        } else {\n            setSelectedMembers(prevSelectedMembers => [...prevSelectedMembers, _id])\n        }\n    }\n\n    function handleSearch(){\n        const filteredUsers = users.filter(user => {\n            if(!user.firstName){\n                return\n            }\n            const userName = `${user.firstName.toLowerCase()} ${user.lastName.toLowerCase()}`\n            return userName.includes(searchQuery.toLowerCase())\n        })\n\n        return (\n            <div>\n                {filteredUsers.map(user => <MemberTag  key={user._id} name={`${user.firstName} ${user.lastName}`} avatar={user.avatar} set={() => selectMember(user._id)} />)}\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        getClientUsers()\n    }, [])\n\n    return (\n        <>\n        <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n        {searchQuery.length > 0 ? handleSearch() : showClientUsers()}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}